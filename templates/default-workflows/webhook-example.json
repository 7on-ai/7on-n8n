{
  "name": "Webhook Integration Example",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "webhook-demo",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [240, 300],
      "webhookId": "webhook-demo-id"
    },
    {
      "parameters": {
        "content": "# ðŸ”— Webhook Integration Example\n\n**This workflow receives HTTP requests**\n\n## ðŸ“¡ How to Use\n1. This workflow creates a webhook endpoint\n2. Send POST requests to trigger automation\n3. Process incoming data automatically\n\n## ðŸ”§ Integration Ideas\n- Connect external apps\n- Receive form submissions\n- Process API callbacks\n- Handle notifications\n\n## ðŸš€ Test This Webhook\nSend a POST request with JSON data to see it in action!\n\n*Perfect for integrating with external systems*"
      },
      "id": "webhook-info",
      "name": "Webhook Info",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [240, 100]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "received_at",
              "value": "={{ new Date().toISOString() }}"
            },
            {
              "name": "method",
              "value": "={{ $json.headers['method'] || 'POST' }}"
            },
            {
              "name": "content_type",
              "value": "={{ $json.headers['content-type'] || 'application/json' }}"
            }
          ]
        },
        "options": {}
      },
      "id": "extract-info",
      "name": "Extract Request Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition-1",
              "leftValue": "={{ $json.body }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-body",
      "name": "Has Request Body?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "status",
              "value": "success"
            },
            {
              "name": "message",
              "value": "Data received and processed"
            },
            {
              "name": "data_keys",
              "value": "={{ Object.keys($json.body || {}).join(', ') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "process-success",
      "name": "Process Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [900, 200]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "status",
              "value": "received"
            },
            {
              "name": "message",
              "value": "Request received but no body data"
            }
          ]
        },
        "options": {}
      },
      "id": "no-data",
      "name": "No Data Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [900, 400]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}"
      },
      "id": "webhook-response",
      "name": "Send Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1120, 300]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Extract Request Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Request Info": {
      "main": [
        [
          {
            "node": "Has Request Body?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has Request Body?": {
      "main": [
        [
          {
            "node": "Process Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Data Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Data": {
      "main": [
        [
          {
            "node": "Send Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Data Response": {
      "main": [
        [
          {
            "node": "Send Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "templateCredsSetupCompleted": true
  }
}
